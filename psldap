<#
.SYNOPSIS
    Query LDAP based on a custom filter and return specified attributes.

.DESCRIPTION
    This script allows a user to query LDAP based on a custom filter and allows the user to define the LDAP attributes they would like returned. The script also allows the user to pass the LDAP server attribute and use either the current user Active Directory credentials or a specific set of credentials to the LDAP server.

.PARAMETER ldapServer
    The LDAP server to connect to.

.PARAMETER filter
    The LDAP filter to use for the search.

.PARAMETER attributes
    The LDAP attributes to return in the search results.

.PARAMETER username
    The username to use when authenticating with the LDAP server.

.PARAMETER password
    The password to use when authenticating with the LDAP server.

.EXAMPLE
    .\script.ps1 -ldapServer "ldap://your-ldap-server.com" -filter "(objectClass=user)" -attributes "cn", "mail", "telephoneNumber" -username "your-username" -password "your-password"
#>

param (
    [string]$ldapServer,
    [string]$filter,
    [string[]]$attributes,
    [string]$username,
    [string]$password
)

if (!$ldapServer) {
    Write-Host "Please specify an LDAP server."
    return
}

$ldapBaseDN = "DC=your-domain,DC=com"

$searcher = New-Object DirectoryServices.DirectorySearcher
$searcher.SearchRoot = New-Object DirectoryServices.DirectoryEntry($ldapServer + "/" + $ldapBaseDN, $username, $password)
$searcher.Filter = $filter
$searcher.SearchScope = "Subtree"
$searcher.PropertiesToLoad.AddRange($attributes)

$results = $searcher.FindAll()

foreach ($result in $results) {
    Write-Host "------------------------"
    foreach ($attribute in $attributes) {
        Write-Host "$attribute: $($result.Properties[$attribute])"
    }
}